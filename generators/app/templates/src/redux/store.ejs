import { createStore, applyMiddleware, compose, combineReducers } from 'redux';
import Reactotron from 'reactotron-react-native';
import thunk from 'redux-thunk';
import { reducer as navigation } from 'react-native-renavigate';

<%_ if(features.login) { _%>
import { reducer as auth } from './authHandlers';
<%_ } _%>
<%_ if(features.pushnotifications) { _%>
import { reducer as pushNotifications } from './pushNotificationHandlers';
<%_ } _%>
<%_ if(features.pushnotifications || features.login) { _%>

<%_ } _%>
const reducers = combineReducers({
  <%_ if(features.pushnotifications) { _%>
  pushNotifications,
  <%_ } _%>
  <%_ if(features.login) { _%>
  auth,
  <%_ } _%>
  navigation
});

const middlewares = [];
const enhancers = [];

/* ------------- Thunk Middleware ------------- */
middlewares.push(thunk);

/* ------------- Assemble Middleware ------------- */
enhancers.push(applyMiddleware(...middlewares));

// in dev mode, we'll create the store through Reactotron
const createAppropriateStore = __DEV__ ? Reactotron.createStore : createStore;
const store = createAppropriateStore(reducers, compose(...enhancers));

export default store;
