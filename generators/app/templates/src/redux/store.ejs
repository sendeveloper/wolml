import { createStore, applyMiddleware, compose, combineReducers } from 'redux';
import Reactotron from 'reactotron-react-native';
import thunk from 'redux-thunk';

import Navigator from '../app/screens';
<%_ if(features.googleanalytics) { _%>
import reduxBeaconMiddleware from '../services/AnalyticsService';
<%_ } _%>

<%_ if(features.login) { _%>
import auth from './auth/reducer';
<%_ } _%>
<%_ if(features.pushnotifications) { _%>
import pushNotifications from './pushNotifications/reducer';
<%_ } _%>
<%_ if(features.drawerios || features.drawerandroid) { _%>
import drawer from './drawer/reducer';
<%_ } _%>
<%_ if(features.drawerios || features.drawerandroid || features.pushnotifications || features.login) { _%>

<%_ } _%>
const nav = (state, action) => Navigator.router.getStateForAction(action, state) || state;

const reducers = combineReducers({
  <%_ if(features.pushnotifications) { _%>
  pushNotifications,
  <%_ } _%>
  <%_ if(features.login) { _%>
  auth,
  <%_ } _%>
  <%_ if(features.drawerios || features.drawerandroid) { _%>
  drawer,
  <%_ } _%>
  nav
});

const middlewares = [];
const enhancers = [];

/* ------------- Thunk Middleware ------------- */
middlewares.push(thunk);

<%_ if(features.googleanalytics) { _%>
/* ------------- Analytics Middleware ------------- */
middlewares.push(reduxBeaconMiddleware);

<%_ } _%>
/* ------------- Assemble Middleware ------------- */
enhancers.push(applyMiddleware(...middlewares));

// in dev mode, we'll create the store through Reactotron
const createAppropriateStore = __DEV__ ? Reactotron.createStore : createStore;
const store = createAppropriateStore(reducers, compose(...enhancers));

export default store;
